---
import { undefined } from "astro:schema";
import moment from "moment";

interface Props {
  title: string;
  author: string;
  me: string;
  publishedDate: string;
  confName: string;
  category: Array<string>;
  postscript: string;
  international: boolean;
  paperUrl?: string;
  codeUrl?: string;
}
const {
  title,
  author,
  me,
  publishedDate,
  confName,
  category,
  postscript,
  international,
  paperUrl = undefined,
  codeUrl = undefined,
} = Astro.props;

// const year = Math.floor(Number(publishedDate[0]) / 100);
// const month = Number(publishedDate[0]) - year * 100;
// const date = new Date(year, month - 1);

const highlightMe = (authors = author, me = "Taehoon Kim") => {
  const authorList = authors.split(",");
  const authorHighlight = (_authors, me) =>
    _authors.includes(me) ? `<strong>${_authors}</strong>` : _authors;
  return authorList.map(a => authorHighlight(a, me)).join(",");
  // const authorList = author_.split(me);
  // return authorList[0] + `<strong>${me}</strong>` + authorList[-1];
};

const categoryExist = !!category?.length;
const postscriptExist = !!postscript?.length;
---

<li class="flex flex-row flex-wrap gap-1">
  <div class="text-xl font-extrabold">{title}</div>
</li>
<li class="test-sm text-gray-500">
  {(<Fragment set:html={highlightMe(author, me)} />)}
</li>
<li class="flex flex-row gap-2 flex-wrap pt-2 place-items-center">
  <div class="font-extrabold">{confName}</div>
  <div>{moment(publishedDate).format("YYYY, MMM")}</div>
  <!-- Draw When p.s. exist -->
  <div class="flex max-sm:flex-wrap gap-1 ">
    {
      codeUrl != undefined && (
        <a href={codeUrl} class="badge badge-outline">
          Code
        </a>
      )
    }
    {
      paperUrl != undefined && (
        <a href={paperUrl} class="badge badge-outline">
          Paper
        </a>
      )
    }
  </div>
  <div class="flex max-sm:flex-wrap gap-1">
    {
      postscriptExist && (
        <div class:list={["badge badge-primary", !postscriptExist && "hidden"]}>
          {postscript}
        </div>
      )
    }
  </div>
  <div class="flex max-sm:flex-wrap gap-1">
    {
      categoryExist &&
        category.map(data => (
          <div class:list={["badge", !categoryExist && "hidden"]}>{data}</div>
        ))
    }
  </div>
</li>
